# Docker compose for build pipeline

version: '3.8'

services:
  mock-register:
    container_name: mock-register
    image: mock-register
    build:
      context: .
      dockerfile: Dockerfile
    ports: 
      - "7000-7006:7000-7006"
    environment:
      - ASPNETCORE_ENVIRONMENT=Release
      - PublicHostName
      - SecureHostName
      - BasePath
      - BasePathExpression
      - Authorization__Issuer
      - Authorization__ClientId
      - Authorization__Scope
      - Certificate__CertThumbprintNameHttpHeaderName
      - Certificate__CertCommonNameHttpHeaderName
    # FIXME - MJS - commented out volumes below as volume is mounted as 1001:121 (vsts:docker) in build pipeline and causes issue with chown in dockerfile (appuser:appgroup), ie stops container from starting because of different user
    # volumes:
    #   - "./_temp/mock-register/tmp:/tmp"      
    healthcheck:
      test: ((wget --no-check-certificate --no-verbose --spider https://localhost:7006/health) && (wget --no-check-certificate --no-verbose --spider https://localhost:7002/idp/.well-known/openid-configuration)) || exit 1
      timeout: 5s
      interval: 5s
      retries: 50
    depends_on:
      mssql:
        condition: service_healthy

  mock-register-integration-tests:
    container_name: mock-register-integration-tests
    image: mock-register-integration-tests
    build:
      context: .
      dockerfile: Dockerfile.integration-tests
    environment:
      - ASPNETCORE_ENVIRONMENT=Release
      # Default TEST_FILTER to not run CTS Only tests
      - TEST_FILTER=${TEST_FILTER:-"Category!=CTSONLY"}
      - CtsSettings__AzureAd__TokenEndpointUrl
      - CtsSettings__AzureAd__ClientId
      - CtsSettings__AzureAd__ClientSecret
      - CtsSettings__AzureAd__Scope
      - CtsSettings__AzureAd__GrantType
      - CtsSettings__AzureAd__UnauthorisedClientId
      - CtsSettings__AzureAd__UnauthorisedClientSecret
      - IdentityProvider_Downstream_BaseUrl
      - PublicHostName
      - SecureHostName
    volumes:
      - "./_temp/mock-register-integration-tests/testresults:/testresults"
    depends_on:
      mock-register:
        condition: service_healthy
      mssql:
        condition: service_healthy

  mssql:
    container_name: sql1
    image: 'mcr.microsoft.com/mssql/server:2019-latest'
    ports: 
      - "1433:1433"
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Pa{}w0rd2019
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S . -U sa -P "Pa{}w0rd2019" -Q "SELECT 1" || exit 1 
      timeout: 5s
      interval: 5s
      retries: 20    
